
# 寻找最长的递增子序列的长度
# [4,1,6,8,5,4,9]

# 题意： 递增序列   4 6 8 9是其中一个递增子序列 并不一定是最长
#                 1 6 8 9 ， 1 4 9， 。。。。
# 目标是： 找出最长的那个数字

# 解题思路：定义一个递归算法
# 最大长度记录表【1 1 2】
#              4,1,6,8,5,4,9
# n=1    以第一个数字结尾的最长递增序列是  4  长度为 1
# n=2    以第二个数字结尾的最长递增序列是  1   长度 1
# n=3                                4 6，1 6  长度为2， 看看2怎来的
# n=4                                          长度为3，2，2 最长为3

x = [2,4,1,6,8,5,4,9]

longest_record = [1] * len(x)

# 从左往右赋值
for i in range(1,len(x)):
    for j in range(i):
        #可以继续组成序列
        if x[i] > x[j]:
            longest_record[i] = max(longest_record[i], longest_record[j]+1)

print(f"最长递增子序列的长度为{max(longest_record)}")